ACTIONS
=======

BASICS
catchFish - no cost, +1 fish
prySponge - no cost, +1 sponge, requires spongeCollection
getClam - no cost, +1 clam, requires clamScooping
getJellyfish - no cost, +1 jellyfish, requires jellyfishHunting 

CONVERSIONS
seaApplesToScience - 1 seaApple [constant], +5 science, requires xenobiology
spongeToScience - 1 sponge [constant], +5 science, requires sponge & xenobiology
jellyfishToScience - 1 jellyfish [constant], +5 science, requires jellyfish & xenobiology
pearlConversion - 1 clam & 5 science [constant], +1 crystal, requires pearlConversion

ALLOYS
transmuteSharkonium - 5 crystal & 15 sand [constant], +1 sharkonium, requires transmutation
smeltCoralglass - 10 coral & 10 sand [constant], +1 coralglass, requires coralglassSmelting
fuseDelphinium - 15 coral & 5 crystal [constant], +1 delphinium, requires aquamarineFusion
forgeSpronge - 5 sponge & 15 residue [constant], +1 spronge, requires industrialGradeSponge

ANIMALS
getShark - 5 fish [linear], +1 shark, requires 5 fish
getManta - 15 fish [linear], +1 ray, requires 15 fish
getCrab - 10 fish [linear], +1 crab, requires 4 shark & 4 ray
getShrimp - 5 sponge [linear], +1 shrimp, requires 5 sponge & seabedGeology
getLobster - 10 clam [linear], +1 lobster, requires seabedGeology
getDolphin - 10 fish [linear], +1 dolphin, requires 10 fish, 50 shark & cetaceanAwareness
getWhale - 10000 fish [linear], +1 whale, requires 10000 fish & cetaceanAwareness
getEel - 15 fish [linear], +1 eel, requires 50 fish & seabedGeology
getChimaera - 20 jellyfish [linear], +1 chimaera, requires 20 jellyfish & exploration
getOctopus - 15 clam [linear], +1 octopus, requires 20 clam & exploration




    // SHARK JOBS ////////////////////////////////////////////////////////////////////////////////

    'getDiver': {
        name: "Prepare diver shark",
        effect: {
            resource: {
                'diver': 1
            }
        },
        cost: [
            {resource: "shark", costFunction: "constant", priceIncrease: 1},
            {resource: "fish", costFunction: "linear", priceIncrease: 30}
        ],
        max: "diver",
        prereq: {
            resource: {
                'shark': 1
            },
            world: "shrouded"
        },
        outcomes: [
            "Well, better you than me.",
            "Good luck down there!",
            "You're doing good work for us, diver shark.",
            "Fare well on your expeditions, shark!"
        ],
        multiOutcomes: [
            "Follow the crystals!",
            "We will find the secrets of the deep!",
            "Brave the deep!",
            "Find the crystals for science!",
            "Deep, dark, scary waters. Good luck, all of you."
        ],
        helpText: "Let a shark go deep into the darkness for more crystals and whatever else they may find."
    },

    'getScientist': {
        name: "Train science shark",
        effect: {
            resource: {
                'scientist': 1
            }
        },
        cost: [
            {resource: "shark", costFunction: "constant", priceIncrease: 1},
            {resource: "crystal", costFunction: "linear", priceIncrease: 20}
        ],
        max: "scientist",
        prereq: {
            resource: {
                'crystal': 20,
                'shark': 1
            }
        },
        outcomes: [
            "Doctor Shark, coming right up!",
            "A scientist shark is revealed!",
            "After many painful years of study, a shark that has developed excellent skills in making excuses-- er, in science!",
            "PhD approved!",
            "Graduation complete!",
            "A new insight drives a new shark to take up the cause of science!"
        ],
        multiOutcomes: [
            "The training program was a success!",
            "Look at all this science!",
            "Building a smarter, better shark!",
            "Beakers! Beakers underwater! It's madness!",
            "Let the science commence!",
            "Underwater clipboards! No I don't know how that works either!",
            "Careful teeth record the discoveries!"
        ],
        helpText: "Train a shark in the fine art of research and the science of, well, science."
    },

    'getNurse': {
        name: "Train nurse shark",
        effect: {
            resource: {
                'nurse': 1
            }
        },
        cost: [
            {resource: "shark", costFunction: "constant", priceIncrease: 1},
            {resource: "fish", costFunction: "linear", priceIncrease: 100}
        ],
        max: "nurse",
        prereq: {
            resource: {
                'shark': 1
            },
            upgrade: [
                "biology"
            ]
        },
        outcomes: [
            "A nurse shark is ready!",
            "Shark manufacturer primed.",
            "Nurse shark trained.",
            "Medical exam passed! Nurse shark is go!"
        ],
        multiOutcomes: [
            "More sharks are on the way soon.",
            "Shark swarm begins!",
            "There will be no end to the sharks!",
            "Sharks forever!",
            "The sharks will never end. The sharks are eternal.",
            "More sharks to make more sharks to make more sharks..."
        ],
        helpText: "Remove a shark from fish duty and set them to shark making duty."
    },

    // RAY JOBS ////////////////////////////////////////////////////////////////////////////////

    'getLaser': {
        name: "Equip laser ray",
        effect: {
            resource: {
                'laser': 1
            }
        },
        cost: [
            {resource: "ray", costFunction: "constant", priceIncrease: 1},
            {resource: "crystal", costFunction: "linear", priceIncrease: 50}
        ],
        max: "laser",
        prereq: {
            resource: {
                'ray': 1
            },
            upgrade: [
                "laserRays"
            ]
        },
        outcomes: [
            "Laser ray online!",
            "Laser ray! With a laser ray! It's laser ray, with a laaaaaser raaaay!",
            "Laser ray.",
            "Ray suited up with a laaaaaaser!",
            "Ray lasered. To use a laser. Not the subject of a laser."
        ],
        multiOutcomes: [
            "Boil the seabed!",
            "Churn the sand to crystal!",
            "Laser ray armada in position!",
            "Ray crystal processing initiative is growing stronger every day!",
            "Welcome to the future! The future is lasers!"
        ],
        helpText: "Remove a ray from sand detail and let them fuse sand into raw crystal."
    },

    'getMaker': {
        name: "Instruct a ray maker",
        effect: {
            resource: {
                'maker': 1
            }
        },
        cost: [
            {resource: "ray", costFunction: "constant", priceIncrease: 1},
            {resource: "fish", costFunction: "linear", priceIncrease: 300},
            {resource: "kelp", costFunction: "linear", priceIncrease: 15}
        ],
        max: "maker",
        prereq: {
            resource: {
                'ray': 1
            },
            upgrade: [
                "rayBiology"
            ]
        },
        outcomes: [
            "The application of kelp supplements has made a ray very productive.",
            "More rays lets you get more rays which you can then use to get more rays.",
            "The ray singularity begins!",
            "A ray maker is ready.",
            "Looks like you gave them quite the ray maker blow! 'Them' being the intangible enemy that is lacking in resources.",
            "The ray seems concerned, but obliges. The mission has been given."
        ],
        multiOutcomes: [
            "All these makers. What are they making? What is it for? Oh. It's rays, and it's probably for sand or something.",
            "More ray makers means more rays. Do you understand what that means?! Do you?! It means more rays. Good. On the same page, then.",
            "Rapidly breeding aquatic wildlife is probably a severe ecological hazard. Good thing this isn't Earth's oceans, probably!",
            "Have you ever thought about what the rays wanted? Because this might have been what they wanted after all.",
            "MORE LASER RAYS FOR THE LASER ARMY-- oh. Well, this is good too."
        ],
        helpText: "Remove a ray from sand business and let them concentrate on making more rays."
    },

    // CRAB JOBS ////////////////////////////////////////////////////////////////////////////////

    'getPlanter': {
        name: "Gear up planter crab",
        effect: {
            resource: {
                'planter': 1
            }
        },
        cost: [
            {resource: "crab", costFunction: "constant", priceIncrease: 1},
            {resource: "sand", costFunction: "linear", priceIncrease: 200}
        ],
        max: "planter",
        prereq: {
            resource: {
                'crab': 1
            },
            upgrade: [
                "kelpHorticulture"
            ]
        },
        outcomes: [
            "Crab set up with seeds.",
            "Shell studded with kelp.",
            "Crab is going on a mission. A mission... to farm.",
            "Planter crab equipped and ready to move a few feet and start planting some things!",
            "Crab is ready to farm!"
        ],
        multiOutcomes: [
            "Carpet the seabed!",
            "Kelp kelp kelp kelp kelp kelp kelp kelp.",
            "Horticulturists unite!",
            "Strike the sand!",
            "Pat the sand very gently and put kelp in it!",
            "More kelp. The apples. They hunger. They hunger for kelp."
        ],
        helpText: "Equip a crab with the equipment and training to plant kelp across the ocean bottom."
    },

    'getBrood': {
        name: "Form crab brood",
        effect: {
            resource: {
                'brood': 1
            }
        },
        cost: [
            {resource: "crab", costFunction: "constant", priceIncrease: 20},
            {resource: "fish", costFunction: "linear", priceIncrease: 200}
        ],
        max: "brood",
        prereq: {
            resource: {
                'crab': 1
            },
            upgrade: [
                "crabBiology"
            ]
        },
        outcomes: [
            "A bunch of crabs pile together into some sort of weird cluster.",
            "Crab team, assemble! FORM THE CRAB BROOD!",
            "[This message has been censored for reasons of being mostly really gross.]",
            "Eggs, eggs everywhere, but never stop and think.",
            "Writhing crab pile. Didn't expect those words next to each other today, did you.",
            "The crab brood is a rarely witnessed phenomenon, due to being some strange behaviour of crabs that have been driven to seek crystals for reasons only they understand."
        ],
        multiOutcomes: [
            "The broods grow. The swarm rises.",
            "All these crabs are probably a little excessive. ...is what I could say, but I'm going to say this instead. MORE CRABS.",
            "A sea of crabs on the bottom of the sea. Clickity clackity.",
            "Snip snap clack clack burble burble crabs crabs crabs crabs.",
            "More crabs are always a good idea. Crystals aren't cheap.",
            "The broods swell in number. The sharks are uneasy, but the concern soon passes.",
            "Yes. Feed the kelp. Feed it. Feeeeeed it."
        ],
        helpText: "Meld several crabs into a terrifying, incomprehensible crab-producing brood cluster."
    },

    // SHRIMP JOBS ////////////////////////////////////////////////////////////////////////////////

    'getQueen': {
        name: "Crown shrimp queen",
        effect: {
            resource: {
                'queen': 1
            }
        },
        cost: [
            {resource: "shrimp", costFunction: "constant", priceIncrease: 1},
            {resource: "sponge", costFunction: "linear", priceIncrease: 50}
        ],
        max: "queen",
        prereq: {
            resource: {
                'shrimp': 1
            },
            upgrade: [
                "eusociality"
            ]
        },
        outcomes: [
            "Shrimp queen prepped for duty!",
            "A royal shrimp is she!",
            "More shrimp for the shrimp superorganism!",
            "Give it time before they start singing about wanting to break free.",
            "Long live the tiny tiny shrimp queen!"
        ],
        multiOutcomes: [
            "Okay, so it's not exactly a royal role, but hey, they're gonna be making eggs for a long time. Humour them.",
            "This is the weirdest monarchy in existence.",
            "Welcome to the superorganisation!",
            "They want to ride their bicycle.",
            "Give it time before they start singing about wanting to break free.",
            "Queens for the shrimp colony! Eggs for the egg throne!"
        ],
        helpText: "Create a shrimp queen to make more shrimp."
    },

    'getWorker': {
        name: "Assign shrimp worker",
        effect: {
            resource: {
                'worker': 1
            }
        },
        cost: [
            {resource: "shrimp", costFunction: "constant", priceIncrease: 1},
            {resource: "sponge", costFunction: "linear", priceIncrease: 20}
        ],
        max: "worker",
        prereq: {
            resource: {
                'shrimp': 1
            },
            upgrade: [
                "eusociality"
            ]
        },
        outcomes: [
            "No more work for this shrimp! Of their particular variety! Now slightly different work! Go!",
            "Consider this a promotion.",
            "This shrimp is going to have to come in on weekends now, I'm afraid.",
            "We sure love micromanaging these tiny guys on an individual basis, don't we.",
            "This little shrimp is so happy to be picked out of the crowd."
        ],
        multiOutcomes: [
            "These are some pretty fluid castes.",
            "Promotions for everybody!",
            "We're reorganising the superorganism.",
            "The sponge must grow.",
            "The sponge is the life.",
            "Glory to the sponge. Glory to the shrimp mass."
        ],
        helpText: "Dedicate a shrimp to collecting stuff that isn't algae."
    },

    // LOBSTER JOBS ////////////////////////////////////////////////////////////////////////////////

    'getBerrier': {
        name: "Form lobster berrier",
        effect: {
            resource: {
                'berrier': 1
            }
        },
        cost: [
            {resource: "lobster", costFunction: "constant", priceIncrease: 1},
            {resource: "clam", costFunction: "linear", priceIncrease: 30}
        ],
        max: "berrier",
        prereq: {
            resource: {
                'lobster': 1
            },
            upgrade: [
                "crustaceanBiology"
            ]
        },
        outcomes: [
            "We didn't need to see the process behind this.",
            "One lobster brimming with eggs to go.",
            "It's like some weird counterpart to the planter crab. But with eggs.",
            "Lobster with rocks ready to make a move. Oh, okay, eggs, whatever, see, they look like shiny pebbles from a distance and... oh, forget it."
        ],
        multiOutcomes: [
            "Berrier isn't even a word!",
            "Berries and eggs aren't even the same thing!",
            "How do these things swim with this much weighing them down?",
            "We aren't running out of volunteers any time soon.",
            "Did you see them fight for this job? Claws everywhere, I tell you!"
        ],
        helpText: "Dedicate a lobster to egg production. We don't know how it works. Ask the lobsters."
    },

    'getHarvester': {
        name: "Train lobster harvester",
        effect: {
            resource: {
                'harvester': 1
            }
        },
        cost: [
            {resource: "lobster", costFunction: "constant", priceIncrease: 1},
            {resource: "clam", costFunction: "linear", priceIncrease: 25},
            {resource: "sponge", costFunction: "linear", priceIncrease: 5}
        ],
        max: "harvester",
        prereq: {
            resource: {
                'lobster': 1
            },
            upgrade: [
                "crustaceanBiology"
            ]
        },
        outcomes: [
            "Yes, lobster, put these claws to better use.",
            "It is time for this one to seek more interesting prey. Wait. Wait, no, it's just as stationary. Never mind. False alarm.",
            "Lobster sticks to seabed!"
        ],
        multiOutcomes: [
            "Cut down the kelp forests!",
            "Rip the sponge and tear the kelp!",
            "Harvest the seafloor!",
            "The lobster tide shall claim the-- wait no you said harvesters. Okay. Adjusting that, then.",
            "These guys are pretty unenthusiastic about everything they do, aren't they."
        ],
        helpText: "Train a lobster to cut down kelp faster than anything can plant it. Sustainable!"
    },

    // DOLPHIN JOBS ////////////////////////////////////////////////////////////////////////////////

    'getPhilosopher': {
        name: "Qualify dolphin philosopher",
        effect: {
            resource: {
                'philosopher': 1
            }
        },
        cost: [
            {resource: "dolphin", costFunction: "constant", priceIncrease: 1},
            {resource: "fish", costFunction: "linear", priceIncrease: 30},
            {resource: "coral", costFunction: "linear", priceIncrease: 10}
        ],
        max: "philosopher",
        prereq: {
            resource: {
                'dolphin': 1
            },
            upgrade: [
                "delphinePhilosophy"
            ]
        },
        outcomes: [
            "We've given a dolphin free opportunity to ramble. WHY?!",
            "Let's humour this dolphin's rambling.",
            "This philosopher might have some insight.",
            "Maybe this dolphin can answer the question of why we're even working with dolphins."
        ],
        multiOutcomes: [
            "We begrudgingly acknowledge that working together is providing us with new insights.",
            "It's time to wax poetic and ponder.",
            "These pretentious clicking jerks can sometimes raise a good point.",
            "Oh joy. We're encouraging them to talk more.",
            "What's wrong with shark science?!"
        ],
        helpText: "Determine which of these dolphins is actually smart, and not just repeating empty phrases."
    },

    'getTreasurer': {
        name: "Promote dolphin treasurer",
        effect: {
            resource: {
                'treasurer': 1
            }
        },
        cost: [
            {resource: "dolphin", costFunction: "constant", priceIncrease: 1},
            {resource: "fish", costFunction: "linear", priceIncrease: 20},
            {resource: "crystal", costFunction: "linear", priceIncrease: 20}
        ],
        max: "treasurer",
        prereq: {
            resource: {
                'dolphin': 1
            },
            upgrade: [
                "delphinePhilosophy"
            ]
        },
        outcomes: [
            "Treasurer of the dolphin treasures, go!",
            "We are trusting this dolphin with a lot. Is that wise?",
            "A dolphin is promoted to where it can do slightly more damage!",
            "Dolphin treasurer ready to do... whatever it is they do."
        ],
        multiOutcomes: [
            "Do we need this many treasurers?",
            "Should we be encouraging this?",
            "We require more crystals.",
            "You're might be playing a dangerous game trusting these guys.",
            "The treasury grows!"
        ],
        helpText: "Promote a dolphin to a harder job involving interest on precious coral and crystal or something like that."
    },

    'getBiologist': {
        name: "Train dolphin biologist",
        effect: {
            resource: {
                'biologist': 1
            }
        },
        cost: [
            {resource: "dolphin", costFunction: "constant", priceIncrease: 1},
            {resource: "fish", costFunction: "linear", priceIncrease: 10},
            {resource: "science", costFunction: "linear", priceIncrease: 20}
        ],
        max: "biologist",
        prereq: {
            resource: {
                'dolphin': 1
            },
            upgrade: [
                "dolphinBiology"
            ]
        },
        outcomes: [
            "Dolphin biologist graduated!",
            "Biologist trained.",
            "Dolphin dedicated to dolphin duty.",
            "Specialist dolphin ready for dolphin."
        ],
        multiOutcomes: [
            "More of them. Eesh.",
            "Dolphins proliferate.",
            "Dolphin biologists ready for whatever passes for their 'research'.",
            "Smug hedonists, the lot of them!",
            "The dolphin population regretfully grows."
        ],
        helpText: "Train a dolphin to specialise in biology. Dolphin biology, specifically, and production, apparently."
    },

    // WHALE JOBS ////////////////////////////////////////////////////////////////////////////////

    'getChorus': {
        name: "Assemble whale chorus",
        effect: {
            resource: {
                'chorus': 1
            }
        },
        cost: [
            {resource: "whale", costFunction: "unique", priceIncrease: 1000}
        ],
        max: "chorus",
        prereq: {
            resource: {
                'whale': 1
            },
            upgrade: [
                "eternalSong"
            ]
        },
        outcomes: [
            "The chorus is made.",
            "The singers sing an immortal tune.",
            "The song is indescribable.",
            "Serenity, eternity.",
            "What purpose does the song have?",
            "Liquid infinity swirls around the grand chorus."
        ],
        helpText: "Form the singers of the eternal song. Let it flow through this world."
    },

    // EEL JOBS ////////////////////////////////////////////////////////////////////////////////

    'getPit': {
        name: "Dig eel pit",
        effect: {
            resource: {
                'pit': 1
            }
        },
        cost: [
            {resource: "eel", costFunction: "constant", priceIncrease: 3},
            {resource: "fish", costFunction: "linear", priceIncrease: 50},
            {resource: "sand", costFunction: "linear", priceIncrease: 20}
        ],
        max: "pit",
        prereq: {
            resource: {
                'eel': 1
            },
            upgrade: [
                "eelHabitats"
            ]
        },
        outcomes: [
            "Why does it take three eels? Oh well. We don't really need to know.",
            "Dig that pit. We can dig it.",
            "Let's get digging.",
            "Oh, hey, this hole's already empty. Well, isn't that something."
        ],
        multiOutcomes: [
            "Let's get digging.",
            "Eel tide rises.",
            "More eels! They're handy to have.",
            "Many eyes from the caves.",
            "Secret homes!",
            "The eels are content."
        ],
        helpText: "Find a suitable pit for eels to make more eels."
    },

    'getTechnician': {
        name: "Teach eel technician",
        effect: {
            resource: {
                'technician': 1
            }
        },
        cost: [
            {resource: "eel", costFunction: "constant", priceIncrease: 1},
            {resource: "fish", costFunction: "linear", priceIncrease: 30},
            {resource: "crystal", costFunction: "linear", priceIncrease: 5}
        ],
        max: "technician",
        prereq: {
            resource: {
                'eel': 1
            },
            upgrade: [
                "eelHabitats"
            ]
        },
        outcomes: [
            "We have a technician!",
            "Technical problems no more!",
            "No, the eel won't fix your computer.",
            "Eel technician!"
        ],
        multiOutcomes: [
            "Let's get technical!",
            "Qualified and certified!",
            "Support squad on the rise!",
            "Let us not question the nature of eel technical training.",
            "Science progresses!"
        ],
        helpText: "Instruct an eel in the fine art of shark science."
    },

    'getSifter': {
        name: "Train eel sifter",
        effect: {
            resource: {
                'sifter': 1
            }
        },
        cost: [
            {resource: "eel", costFunction: "constant", priceIncrease: 1},
            {resource: "fish", costFunction: "linear", priceIncrease: 30}
        ],
        max: "sifter",
        prereq: {
            resource: {
                'eel': 1
            },
            upgrade: [
                "eelHabitats"
            ]
        },
        outcomes: [
            "Eel sifter ready to find things!",
            "Eel ready to sift through the sands!",
            "Time to sift, eel. Time to seek, search and sift.",
            "Time for this little guy to find some goodies."
        ],
        multiOutcomes: [
            "Time to find the things!",
            "Sift. It's a fun word. Siiiiffft.",
            "Sifters scouring the seabed for some special stuff.",
            "Shifters ready to shift! Wait. No. Hang on.",
            "Sifting the seabed for scores of surprises!"
        ],
        helpText: "Specialise an eel in finding interesting things on the seabed."
    },

    // CHIMAERA JOBS ////////////////////////////////////////////////////////////////////////////////

    'getTransmuter': {
        name: "Induct chimaera transmuter",
        effect: {
            resource: {
                'transmuter': 1
            }
        },
        cost: [
            {resource: "chimaera", costFunction: "constant", priceIncrease: 1},
            {resource: "jellyfish", costFunction: "linear", priceIncrease: 10},
            {resource: "sharkonium", costFunction: "linear", priceIncrease: 10}
        ],
        max: "transmuter",
        prereq: {
            resource: {
                'chimaera': 1
            },
            upgrade: [
                "chimaeraMysticism"
            ]
        },
        outcomes: [
            "Transmuter taught.",
            "The chimaera's eyes flicker with power.",
            "The water glows around the chimaera.",
            "The chimaera forms the material of progress."
        ],
        multiOutcomes: [
            "The chimaeras are now masters of matter.",
            "The transmuters revel in our revealed secrets.",
            "The process continues.",
            "The matter matters.",
            "The immaterial made material."
        ],
        helpText: "Reveal the mysteries of transmutation to a chimaera."
    },

    'getExplorer': {
        name: "Prepare chimaera explorer",
        effect: {
            resource: {
                'explorer': 1
            }
        },
        cost: [
            {resource: "chimaera", costFunction: "constant", priceIncrease: 1},
            {resource: "jellyfish", costFunction: "linear", priceIncrease: 30},
            {resource: "crystal", costFunction: "linear", priceIncrease: 30}
        ],
        max: "explorer",
        prereq: {
            resource: {
                'chimaera': 1
            },
            upgrade: [
                "chimaeraMysticism"
            ]
        },
        outcomes: [
            "A seeker of mysteries is prepared.",
            "The chimaera explorer is ready for their journey.",
            "Explorer ready for some answers!",
            "The chimaera swims down to the ocean below."
        ],
        multiOutcomes: [
            "The exploration party is ready.",
            "Learn the secrets of the deeps!",
            "More mysteries to uncover.",
            "Ancient riddles for ancient creatures.",
            "Find the truth beneath the waves!"
        ],
        helpText: "Help prepare a chimaera for exploration to parts unknown. Their efforts will be good for science."
    },

    // OCTOPUS JOBS ////////////////////////////////////////////////////////////////////////////////

    'getCollector': {
        name: "Reassign octopus as collector",
        effect: {
            resource: {
                'collector': 1
            }
        },
        cost: [
            {resource: "octopus", costFunction: "constant", priceIncrease: 1},
            {resource: "clam", costFunction: "linear", priceIncrease: 50}
        ],
        max: "collector",
        prereq: {
            resource: {
                'octopus': 1
            },
            upgrade: [
                "octopusMethodology"
            ]
        },
        outcomes: [
            "An octopus is a collector now.",
            "Octopus, collector.",
            "The role has been assigned. Collector.",
            "The delegation has been made. Collector.",
            "This individual now collects."
        ],
        multiOutcomes: [
            "Collectors will retrieve that which has value to others.",
            "Collectors will collect what they feel is required.",
            "Collectors will begin their thankless harvest.",
            "Collectors will act as instructed."
        ],
        helpText: "Delegate an octopus to collect crystal and coral."
    },

    'getScavenger': {
        name: "Reassign octopus as scavenger",
        effect: {
            resource: {
                'scavenger': 1
            }
        },
        cost: [
            {resource: "octopus", costFunction: "constant", priceIncrease: 1},
            {resource: "clam", costFunction: "linear", priceIncrease: 30}
        ],
        max: "scavenger",
        prereq: {
            resource: {
                'octopus': 1
            },
            upgrade: [
                "octopusMethodology"
            ]
        },
        outcomes: [
            "An octopus is a scavenger now.",
            "Octopus, scavenger.",
            "The role has been assigned. Scavenger.",
            "The delegation has been made. Scavenger.",
            "This individual now scavenges."
        ],
        multiOutcomes: [
            "Scavengers will retrieve that which has value to their kind.",
            "Scavengers will scavenge what they can from below.",
            "Scavengers will pry the substrate of future progress from the ocean floor.",
            "Scavengers will act as instructed."
        ],
        helpText: "Delegate an octopus to scavenge sponge and sand."
    },

    // SHARK MACHINES ////////////////////////////////////////////////////////////////////////////////

    'getCrystalMiner': {
        name: "Build crystal miner",
        effect: {
            resource: {
                'crystalMiner': 1
            }
        },
        cost: [
            {resource: "crystal", costFunction: "linear", priceIncrease: 100},
            {resource: "sand", costFunction: "linear", priceIncrease: 200},
            {resource: "sharkonium", costFunction: "linear", priceIncrease: 20}
        ],
        max: "crystalMiner",
        prereq: {
            resource: {
                'sharkonium': 20
            },
            upgrade: [
                "automation"
            ]
        },
        outcomes: [
            "Crystal miner activated.",
            "Crystal miner constructed.",
            "Mining machine online.",
            "Construction complete.",
            "Carve rock. Remove sand. Retrieve target."
        ],
        multiOutcomes: [
            "The machines rise.",
            "The miners dig.",
            "The crystal shall be harvested.",
            "Crystal miners are complete."
        ],
        helpText: "Construct a machine to automatically harvest crystals efficiently."
    },

    'getSandDigger': {
        name: "Build sand digger",
        effect: {
            resource: {
                'sandDigger': 1
            }
        },
        cost: [
            {resource: "sand", costFunction: "linear", priceIncrease: 500},
            {resource: "sharkonium", costFunction: "linear", priceIncrease: 150}
        ],
        max: "sandDigger",
        prereq: {
            resource: {
                'sharkonium': 150
            },
            upgrade: [
                "automation"
            ]
        },
        outcomes: [
            "Sand digger constructed.",
            "Sand digger reaches into the seabed.",
            "The digger begins to shuffle sand into its machine maw. Rays dart away.",
            "The machine is online.",
            "The machine acts immediately, shovelling sand."
        ],
        multiOutcomes: [
            "The machines increase in number.",
            "The diggers devour.",
            "All sand must be gathered.",
            "The rays are concerned.",
            "Devour the sands. Consume.",
            "Giant machines blot out our sun."
        ],
        helpText: "Construct a machine to automatically dig up sand efficiently."
    },

    'getFishMachine': {
        name: "Build fish machine",
        effect: {
            resource: {
                fishMachine: 1
            }
        },
        cost: [
            {resource: "sharkonium", costFunction: "linear", priceIncrease: 100}
        ],
        max: "fishMachine",
        prereq: {
            resource: {
                'sharkonium': 100
            },
            upgrade: [
                "automation"
            ]
        },
        outcomes: [
            "Fish machine activated.",
            "Fish machine constructed.",
            "Fishing machine online.",
            "Construction complete.",
            "The quarry moves. But the machine is faster."
        ],
        multiOutcomes: [
            "One day there will be no fish left. Only the machines.",
            "Today the shark is flesh. Tomorrow, machine.",
            "Your metal servants can sate the hunger. The hunger for fish.",
            "The fishing machines are more efficient than the sharks. But they aren't very smart.",
            "Automated fishing.",
            "The power of many, many sharks, in many, many devices."
        ],
        helpText: "Construct a machine to automatically gather fish efficiently."
    },

    'getAutoTransmuter': {
        name: "Build auto-transmuter",
        effect: {
            resource: {
                'autoTransmuter': 1
            }
        },
        cost: [
            {resource: "crystal", costFunction: "linear", priceIncrease: 100},
            {resource: "sharkonium", costFunction: "linear", priceIncrease: 200}
        ],
        max: "autoTransmuter",
        prereq: {
            resource: {
                'sharkonium': 200
            },
            upgrade: [
                "engineering"
            ]
        },
        outcomes: [
            "Auto-transmuter activated.",
            "Auto-transmuter constructed.",
            "Transmutation machine online.",
            "Construction complete.",
            "Provide inputs. Only the output matters."
        ],
        multiOutcomes: [
            "Auto-transmuters are prepared.",
            "The difference between science and magic is reliable application.",
            "All is change.",
            "Change is all.",
            "The machines know many secrets, yet cannot speak of them."
        ],
        helpText: "Construct a machine to automatically transmute sand and crystal to sharkonium."
    },

    'getSkimmer': {
        name: "Build skimmer",
        effect: {
            resource: {
                'skimmer': 1
            }
        },
        cost: [
            {resource: "junk", costFunction: "linear", priceIncrease: 300},
            {resource: "sharkonium", costFunction: "linear", priceIncrease: 200}
        ],
        max: "skimmer",
        prereq: {
            resource: {
                'junk': 100
            },
            upgrade: [
                "engineering"
            ]
        },
        outcomes: [
            "Skimmer activated.",
            "Skimmer constructed.",
            "Residue producer online.",
            "Construction complete.",
            "Sacrifices must be made for progress."
        ],
        multiOutcomes: [
            "The lesser resource becomes the greatest of all.",
            "Transmutation is limited. The recycler is greater.",
            "Consumption and production are two halves of the greater whole.",
            "The creations of sharks emerge from a pattern as old as their species."
        ],
        helpText: "Construct a machine to automatically recycle kelp and sand into residue."
    },

    'getPurifier': {
        name: "Build purifier",
        effect: {
            resource: {
                'purifier': 1
            }
        },
        cost: [
            {resource: "sharkonium", costFunction: "linear", priceIncrease: 500}
        ],
        max: "purifier",
        prereq: {
            resource: {
                'sharkonium': 500
            },
            upgrade: [
                "environmentalism"
            ]
        },
        outcomes: [
            "Purifier activated.",
            "Purifier constructed.",
            "Machine gills online.",
            "Construction complete.",
            "Not all machines carry such weight."
        ],
        multiOutcomes: [
            "We can almost hear these machines as they start. We can hear them speak. \"We will save you from your mistakes.\" No, I'm just, must be hearing things, ignore me.",
            "The problems of old will be solved by the new.",
            "The waters will return to clarity.",
            "The machines may destroy, but so too can they heal and repair.",
            "The end is not nearly so soon.",
            "Hope."
        ],
        helpText: "Construct a machine to restore vitality to our increasingly murky waters."
    },

    'getHeater': {
        name: "Build heater",
        effect: {
            resource: {
                'heater': 1
            }
        },
        cost: [
            {resource: "sharkonium", costFunction: "linear", priceIncrease: 300}
        ],
        max: "heater",
        prereq: {
            resource: {
                'ice': 1,
                'sharkonium': 300
            },
            upgrade: [
                "thermalConditioning"
            ]
        },
        outcomes: [
            "Heater activated.",
            "Heater constructed.",
            "Climate control online.",
            "Construction complete.",
            "The end of ice."
        ],
        multiOutcomes: [
            "The ice age comes to a close.",
            "Is this replacing one form of destruction for another?",
            "Life becomes easier.",
            "The warmth. The warmth we desired so much.",
            "Life returns to the frozen sea.",
            "This world awakens."
        ],
        helpText: "Construct a machine to combat the advancing ice shelf."
    },

    // CRUSTACEAN MACHINES /////////////////////////////////////////////////////////

    'getSpongeFarmer': {
        name: "Build sponge farmer",
        effect: {
            resource: {
                'spongeFarmer': 1
            }
        },
        cost: [
            {resource: "coralglass", costFunction: "linear", priceIncrease: 200}
        ],
        max: "spongeFarmer",
        prereq: {
            resource: {
                'coralglass': 200
            },
            upgrade: [
                "coralCircuitry"
            ]
        },
        outcomes: [
            "Sponge farmer is active.",
            "Sponge farmer capable.",
            "This sponge farming machine clatters to life.",
            "This automated caretaker gets to work."
        ],
        multiOutcomes: [
            "Sponges are not hard to domesticate. It's harder to make them wild.",
            "The shrimp will be happier.",
            "There is something missing compared to our machines. Ours are slightly more menacing, but also more effective.",
            "Who needs this much sponge?"
        ],
        helpText: "This crustacean machine automatically farms and harvests sponge."
    },

    'getBerrySprayer': {
        name: "Build berry sprayer",
        effect: {
            resource: {
                'berrySprayer': 1
            }
        },
        cost: [
            {resource: "coralglass", costFunction: "linear", priceIncrease: 500}
        ],
        max: "berrySprayer",
        prereq: {
            resource: {
                'coralglass': 500,
                'lobster': 2
            },
            upgrade: [
                "coralCircuitry"
            ]
        },
        outcomes: [
            "Berry sprayer is active.",
            "Berry sprayer capable.",
            "This egg spraying machine clatters to life.",
            "This automated caretaker gets to work." // yeah, it's lazy, I know, but still just as appropriate
        ],
        multiOutcomes: [
            "Automation of population? What a terrifying concept.",
            "The machine rears lobster eggs. Wouldn't the shrimp want something like this too?",
            "There is an uneasiness about these machines that fills the sharks with concern.",
            "Why was this machine invented? Are we helping to prepare an army?"
        ],
        helpText: "This crustacean machine distributes lobster eggs for optimal hatching conditions."
    },

    'getGlassMaker': {
        name: "Build glass maker",
        effect: {
            resource: {
                'glassMaker': 1
            }
        },
        cost: [
            {resource: "coralglass", costFunction: "linear", priceIncrease: 400},
            {resource: "sand", costFunction: "linear", priceIncrease: 200},
            {resource: "coral", costFunction: "linear", priceIncrease: 200}
        ],
        max: "glassMaker",
        prereq: {
            resource: {
                'coralglass': 400
            },
            upgrade: [
                "coralCircuitry"
            ]
        },
        outcomes: [
            "Glass maker is active.",
            "Glass maker capable.",
            "This glass forging machine clatters to life.",
            "The coralglass factory whirrs and boils."
        ],
        multiOutcomes: [
            "Coralglass. The sharkonium of the shelled kind.",
            "The raw heat from these things could boil the ocean dry. How they do it, we don't know.",
            "Coralglass. So fragile, so beautiful, yet so durable. They make the machines in their own image.",
            "The fine intricacies of these machines are lost on us, given how much of our technological development involves our mouths."
        ],
        helpText: "This crustacean machine automatically makes coralglass out of coral and sand through processes we don't fully understand."
    },

    // DOLPHIN MACHINES /////////////////////////////////////////////////////////

    'getSilentArchivist': {
        name: "Build silent archivist",
        effect: {
            resource: {
                'silentArchivist': 1
            }
        },
        cost: [
            {resource: "delphinium", costFunction: "linear", priceIncrease: 300},
            {resource: "science", costFunction: "linear", priceIncrease: 200}
        ],
        max: "silentArchivist",
        prereq: {
            resource: {
                'delphinium': 300
            },
            upgrade: [
                "dolphinTechnology"
            ]
        },
        outcomes: [
            "Silent archivist watches on.",
            "Silent archivist shows no bias.",
            "Silent archivist makes a note.",
            "Silent archivist views us with disdain."
        ],
        multiOutcomes: [
            "More archivers of our grand works as a collective.",
            "These machines share the same insights as their creators, but are much less painful to deal with.",
            "The design for these machines seems strangely familiar.",
            "These things are too silent. We aren't sure if they're even on.",
            "Science is nothing without review."
        ],
        helpText: "This dolphin machine archives, critiques, and catalogues our science."
    },

    'getTirelessCrafter': {
        name: "Build tireless crafter",
        effect: {
            resource: {
                'tirelessCrafter': 1
            }
        },
        cost: [
            {resource: "delphinium", costFunction: "linear", priceIncrease: 200},
            {resource: "crystal", costFunction: "linear", priceIncrease: 200},
            {resource: "coral", costFunction: "linear", priceIncrease: 200}
        ],
        max: "tirelessCrafter",
        prereq: {
            resource: {
                'delphinium': 200
            },
            upgrade: [
                "dolphinTechnology"
            ]
        },
        outcomes: [
            "Tireless crafter fuses the matter.",
            "Tireless crafter never ceases.",
            "Tireless crafter lays foundation for a future.",
            "Tireless crafter is an accident waiting to happen."
        ],
        multiOutcomes: [
            "Delphinium. The warped counterpart to sharkonium.",
            "A silent, heatless process, much like the auto-transmuter's method of operation.",
            "Delphinium. We don't understand it. It feels a lot like sharkonium, but warmer.",
            "The complexity of these machines is unwarranted. The dolphins think themselves smarter, but we have simpler, more effective solutions."
        ],
        helpText: "This dolphin machine creates delphinium. What good that is to us is a mystery. Use it to make their useless machines, I guess?"
    },

    // OCTOPUS MACHINES /////////////////////////////////////////////////////////

    'getClamCollector': {
        name: "Build clam collector",
        effect: {
            resource: {
                'clamCollector': 1
            }
        },
        cost: [
            {resource: "spronge", costFunction: "linear", priceIncrease: 50}
        ],
        max: "clamCollector",
        prereq: {
            resource: {
                'spronge': 50
            },
            upgrade: [
                "sprongeBiomimicry"
            ]
        },
        outcomes: [
            "Machine: clam collector. Operation: in progress.",
            "Machine: clam collector. Operation: beginning.",
            "Machine: clam collector. Result: clam collection.",
            "Machine: clam collector. Result: food for the masses."
        ],
        multiOutcomes: [
            "These machines feel strangely alive. They pulse and throb.",
            "There exist more clam collectors now.",
            "The biomachine expands.",
            "The octopuses tell me, find unity in efficiency. Find peace in automation."
        ],
        helpText: "This octopus machine collects clams. Simple purpose, simple machine."
    },

    'getEggBrooder': {
        name: "Build egg brooder",
        effect: {
            resource: {
                'eggBrooder': 1
            }
        },
        cost: [
            {resource: "spronge", costFunction: "linear", priceIncrease: 150},
            {resource: "octopus", costFunction: "constant", priceIncrease: 1}
        ],
        max: "eggBrooder",
        prereq: {
            resource: {
                'spronge': 150,
                'octopus': 10
            },
            upgrade: [
                "sprongeBiomimicry"
            ]
        },
        outcomes: [
            "Machine: egg brooder. Operation: in progress.",
            "Machine: egg brooder. Operation: beginning.",
            "Machine: egg brooder. Result: egg maintenance.",
            "Machine: egg brooder. Result: population rises.",
            "Machine: egg brooder. Cost: within acceptable parameters."
        ],
        multiOutcomes: [
            "These machines feel strangely alive. They pulse and throb.",
            "There exist more egg brooders now.",
            "The biomachine expands.",
            "The octopuses tell me, find unity in efficiency. Find peace in an optimised generation."
        ],
        helpText: "This octopus machine broods and incubates octopus eggs."
    },

    'getSprongeSmelter': {
        name: "Build spronge smelter",
        effect: {
            resource: {
                'sprongeSmelter': 1
            }
        },
        cost: [
            {resource: "spronge", costFunction: "linear", priceIncrease: 100}
        ],
        max: "sprongeSmelter",
        prereq: {
            resource: {
                'spronge': 100
            },
            upgrade: [
                "sprongeBiomimicry"
            ]
        },
        outcomes: [
            "Machine: spronge smelter. Operation: in progress.",
            "Machine: spronge smelter. Operation: beginning.",
            "Machine: spronge smelter. Result: spronge smelting.",
            "Machine: spronge smelter. Result: further development."
        ],
        multiOutcomes: [
            "These machines feel strangely alive. They pulse and throb.",
            "There exist more spronge smelters now.",
            "The biomachine expands.",
            "The octopuses tell me, find unity in efficiency. Find peace in an assured future."
        ],
        helpText: "This octopus machine imbues sponge with industrial potential. Requires residue for function."
    },

    'getSeaScourer': {
        name: "Build sea scourer",
        effect: {
            resource: {
                'seaScourer': 1
            }
        },
        cost: [
            {resource: "spronge", costFunction: "linear", priceIncrease: 100},
            {resource: "junk", costFunction: "linear", priceIncrease: 50}
        ],
        max: "seaScourer",
        prereq: {
            resource: {
                'spronge': 100,
                'tar': 1
            },
            upgrade: [
                "sprongeBiomimicry"
            ]
        },
        outcomes: [
            "Machine: sea scourer. Operation: in progress.",
            "Machine: sea scourer. Operation: beginning.",
            "Machine: sea scourer. Result: pollution conversion.",
            "Machine: sea scourer. Result: appropriating inefficiency."
        ],
        multiOutcomes: [
            "These machines feel strangely alive. They pulse and throb.",
            "There exist more sea scourers now.",
            "The biomachine expands.",
            "The octopuses tell me, find unity in efficiency. Find peace in the impermanence of mistakes."
        ],
        helpText: "This octopus machine converts pollution into more useful resources."
    },

    'getProstheticPolyp': {
        name: "Build prosthetic polyp",
        effect: {
            resource: {
                'prostheticPolyp': 1
            }
        },
        cost: [
            {resource: "spronge", costFunction: "linear", priceIncrease: 100},
            {resource: "coral", costFunction: "linear", priceIncrease: 50}
        ],
        max: "prostheticPolyp",
        prereq: {
            resource: {
                'spronge': 100,
                'coral': 50
            },
            upgrade: [
                "sprongeBiomimicry"
            ]
        },
        outcomes: [
            "Machine: prosthetic polyp. Operation: in progress.",
            "Machine: prosthetic polyp. Operation: beginning.",
            "Machine: prosthetic polyp. Result: coral generation.",
            "Machine: prosthetic polyp. Result: ecosystem restabilisation."
        ],
        multiOutcomes: [
            "These machines feel strangely alive. They pulse and throb.",
            "There exist more prosthetic polyps now.",
            "The biomachine expands.",
            "The octopuses tell me, find unity in efficiency. Find peace in creation."
        ],
        helpText: "This octopus machine synthesizes coral faster than an entire colony of polyps ever could."
    }